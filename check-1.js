const fs = require('fs');

let pattern

const readPattern = () => {
  return new Promise(resolve => {
    // fs.readFile('./temp.txt', 'utf8', (err, data) => {
    // fs.readFile('./pattern.txt', 'utf8', (err, data) => {
    fs.readFile('./last10000.txt', 'utf8', (err, data) => {
      if (err) {
        console.error(err);
        resolve("");
      }
      resolve(data);
    });
  })
}

const checkWinOrLose = (strPattern, t) => {
  let count = (strPattern.match(/1/g) || []).length;

  let count010 = (strPattern.match(/0[0]+1/g) || []).length;

  if (count - count010 > t)
    return true;
  else
    return false;
}

const calc = async () => {
  pattern = await readPattern();
  let subPatterns = pattern.split(/10[0]+10[0]+100/g) || []
  let winCount = 0, loseCount = 0;
  let str = "";

  for (let i = 0; i < subPatterns.length; i++) {
    if (checkWinOrLose(subPatterns[i], 36)) {
      winCount++;
      console.log("1 - ", subPatterns[i].length)
      // str += "1 - " + subPatterns[i].length + "\r\n"
      str += "1"
    } else {
      loseCount++;
      console.log("0 - ", subPatterns[i].length)
      // str += "0 - " + subPatterns[i].length + "\r\n"
      str += "0"
    }
  }

  console.log("Win Count: ", winCount)
  console.log("Lose Count: ", loseCount)
  str += "Win Count: " + winCount + "\r\n"
  str += "Lose Count: " + loseCount + "\r\n"

  fs.writeFile("./result.txt", str, function (err) {
    if (err) {
      return console.log(err);
    }
    console.log("The file was saved!");
  });
}

const findBestT = async () => {
  pattern = await readPattern();
  let subPatterns = pattern.split(/10[0]+10[0]+100/g) || []
  let winCount = 0, loseCount = 0;
  let str = "";

  for (let j = 20; j < 40; j++) {
    for (let i = 0; i < subPatterns.length; i++) {
      if (checkWinOrLose(subPatterns[i], j)) {
        winCount++;
      } else {
        loseCount++;
      }
    }

    console.log("T: ", j)
    console.log("Win Count: ", winCount)
    console.log("Lose Count: ", loseCount)
    console.log("Result: ", j * winCount - loseCount * 63)
  }  
}

calc();
// findBestT();